@import url("https://fonts.googleapis.com/css2?family=Silkscreen:wght@400;700&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Oswald:wght@200..700&display=swap");
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  .bg-primary {
    background: rgb(0, 0, 0);
    background: -moz-linear-gradient(
      90deg,
      rgba(0, 0, 0, 1) 0%,
      rgba(1, 10, 62, 1) 100%
    );
    background: -webkit-linear-gradient(
      90deg,
      rgba(0, 0, 0, 1) 0%,
      rgba(1, 10, 62, 1) 100%
    );
    background: linear-gradient(
      90deg,
      rgba(0, 0, 0, 1) 0%,
      rgba(1, 10, 62, 1) 100%
    );
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr="#000000",endColorstr="#010a3e",GradientType=1);
  }

  .container {
    @apply max-w-screen-xl mx-auto px-4;
  }
}

/* Utilities Custom CSS */
html {
  scroll-behavior: smooth;
}

html,
body {
  -ms-overflow-style: none; /* for Internet Explorer and Edge */
  scrollbar-width: none; /* for Firefox */
}

html::-webkit-scrollbar,
body::-webkit-scrollbar {
  display: none; /* for Chrome, Safari, and Opera */
}

.heading h1 {
  font-family: "Silkscreen", sans-serif;
  font-weight: 400;
}

.heading p,
.heading h3 {
  font-family: "Oswald", sans-serif;
  font-optical-sizing: auto;
  font-weight: 400;
}

/* Hero Image Glitch */

.glitch {
  position: relative;
  overflow: hidden;
  height: 550px;
  width: 550px;
}

.hero-img {
  position: relative;
  z-index: 1;
  display: block;
  height: 100%;
  width: 100%;
}

.glitch__layers {
  position: absolute;
  z-index: 2;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
}

.glitch__layer {
  height: 100%;
  width: 100%;
  position: absolute;
  left: 0;
  top: 0;
  background-image: url("/images/heroimage2.png");
  background-size: cover; /* Ensure the background image covers the container */
  background-position: center;
}

.glitch__layer:nth-child(1) {
  /* transform: translateX(-5%); */
  animation: glitch-anim-1 5s infinite linear alternate;
}

.glitch__layer:nth-child(2) {
  /* transform: translateX(3%) translateY(3%); */
  animation: glitch-anim-2 5s -0.8s infinite linear alternate;
}

.glitch__layer:nth-child(3) {
  transform: translateX(4%);
  animation: glitch-anim-flash 5s infinite linear;
}

@keyframes glitch-anim-1 {
  0% {
    clip-path: polygon(0 0%, 100% 0%, 100% 5%, 0 5%);
  }
  10% {
    clip-path: polygon(0 15%, 100% 15%, 100% 15%, 0 15%);
  }
  20% {
    clip-path: polygon(0 10%, 100% 10%, 100% 20%, 0 20%);
  }
  30% {
    clip-path: polygon(0 1%, 100% 1%, 100% 2%, 0 2%);
  }
  40% {
    clip-path: polygon(0 35%, 100% 35%, 100% 35%, 0 35%);
  }
  50% {
    clip-path: polygon(0 45%, 100% 45%, 100% 46%, 0 46%);
  }
  60% {
    clip-path: polygon(0 50%, 100% 50%, 100% 70%, 0 70%);
  }
  70% {
    clip-path: polygon(0 70%, 100% 70%, 100% 70%, 0 70%);
  }
  80% {
    clip-path: polygon(0 80%, 100% 80%, 100% 80%, 0 80%);
  }
  90% {
    clip-path: polygon(0 50%, 100% 50%, 100% 55%, 0 55%);
  }
  100% {
    clip-path: polygon(0 60%, 100% 60%, 100% 70%, 0 70%);
  }
}

@keyframes glitch-anim-2 {
  0% {
    clip-path: polygon(0 15%, 100% 15%, 100% 30%, 0 30%);
  }
  15% {
    clip-path: polygon(0 3%, 100% 3%, 100% 3%, 0 3%);
  }
  25% {
    clip-path: polygon(0 8%, 100% 8%, 100% 20%, 0 20%);
  }
  30% {
    clip-path: polygon(0 20%, 100% 20%, 100% 20%, 0 20%);
  }
  45% {
    clip-path: polygon(0 45%, 100% 45%, 100% 45%, 0 45%);
  }
  50% {
    clip-path: polygon(0 50%, 100% 50%, 100% 57%, 0 57%);
  }
  65% {
    clip-path: polygon(0 60%, 100% 60%, 100% 60%, 0 60%);
  }
  75% {
    clip-path: polygon(0 80%, 100% 80%, 100% 80%, 0 80%);
  }
  80% {
    clip-path: polygon(0 40%, 100% 40%, 100% 60%, 0 60%);
  }
  95% {
    clip-path: polygon(0 45%, 100% 45%, 100% 60%, 0 60%);
  }
  100% {
    clip-path: polygon(0 11%, 100% 11%, 100% 15%, 0 15%);
  }
}

@keyframes glitch-anim-flash {
  0% {
    opacity: 0.2;
  }
  30%,
  100% {
    opacity: 0;
  }
}

/* HTML: <div class="loader"></div> */
.loader {
  width: 200px;
  aspect-ratio: 1;
  display: grid;
}
.loader::before,
.loader::after {
  content: "";
  grid-area: 1/1;
  --c: no-repeat radial-gradient(farthest-side, #8680ff 92%, #0000);
  background: var(--c) 50% 0, var(--c) 50% 100%, var(--c) 100% 50%,
    var(--c) 0 50%;
  background-size: 12px 12px;
  animation: l12 1s infinite;
}
.loader::before {
  margin: 4px;
  filter: hue-rotate(45deg);
  background-size: 8px 8px;
  animation-timing-function: linear;
}

@keyframes l12 {
  100% {
    transform: rotate(0.5turn);
  }
}
